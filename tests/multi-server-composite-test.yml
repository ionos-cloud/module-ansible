---
- hosts: localhost
  connection: local
  gather_facts: false

  vars:
      ssh_public_key: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"

  vars_files:
    - vars.yml

  tasks:
    - name: Provision a set of instances
      server:
         datacenter: "{{ datacenter }}"
         name: "{{ name }} %02d"
         auto_increment: true
         cores: 1
         ram: 2048
         availability_zone: ZONE_1
         volume_availability_zone: ZONE_3
         volume_size: 5
         cpu_family: AMD_OPTERON
         disk_type: HDD
         image: "{{ image }}"
         image_password: "{{ password }}"
         ssh_keys:
            - "{{ ssh_public_key }}"
         location: "{{ location }}"
         count: 2
         assign_public_ip: true
         remove_boot_volume: true
         wait: true
         wait_timeout: "{{ wait_timeout }}"
         state: present
      register: ionos_cloud
    - debug: msg="{{ionos_cloud.machines}}"

    - name: Public SSH firewall rule
      firewall_rule:
         datacenter: "{{ datacenter }}"
         server: "{{ item.id }}"
         nic: "{{ item.nic.id }}"
         name: Allow SSH
         protocol: TCP
         source_ip: 0.0.0.0
         port_range_start: 22
         port_range_end: 22
         wait: true
         wait_timeout: "{{ wait_timeout }}"
         state: present
      with_items: "{{ ionos_cloud.machines }}"

    - name: Create Private NIC
      nic:
         datacenter: "{{ datacenter }}"
         server: "{{ item.id }}"
         lan: 2
         wait: true
         wait_timeout: "{{ wait_timeout }}"
         state: present
      register: private_nic
      with_items: "{{ ionos_cloud.machines }}"
    - debug: msg="{{private_nic.results}}"

    - name: Create SSH Firewall Rule
      firewall_rule:
         datacenter: "{{ datacenter }}"
         server: "{{ item.item.id }}"
         nic: "{{ item.nic.id }}"
         name: Allow SSH
         protocol: TCP
         source_ip: 0.0.0.0
         port_range_start: 22
         port_range_end: 22
         wait: true
         wait_timeout: "{{ wait_timeout }}"
         state: present
      with_items: "{{ private_nic.results }}"

    - name: Create Ping Firewall Rule
      firewall_rule:
         datacenter: "{{ datacenter }}"
         server: "{{ item.item.id }}"
         nic: "{{ item.nic.id }}"
         name: Allow Ping
         protocol: ICMP
         source_ip: 0.0.0.0
         icmp_type: 8
         icmp_code: 0
         wait: true
         wait_timeout: "{{ wait_timeout }}"
         state: present
      with_items: "{{ private_nic.results }}"

    - name: Create data volume
      volume:
         datacenter: "{{ datacenter }}"
         server: "{{ item.id }}"
         name: "{{ item.properties.name }}-data%02d"
         size: 5
         disk_type: SSD
         licence_type: OTHER
         wait_timeout: "{{ wait_timeout }}"
         state: present
      with_items: "{{ ionos_cloud.machines }}"

    - name: Add servers to servers host group
      add_host:
         hostname: "{{ item.properties.name }}"
         ansible_ssh_host: "{{ item.public_ip }}"
         ansible_ssh_user: root
         ansible_ssh_pass: password
         groupname: servers
      with_items: "{{ ionos_cloud.machines }}"
      when: ionos_cloud.action == 'create'

    - name: Remove datacenter
      datacenter:
        name: "{{ datacenter }}"
        state: absent
        wait: true
