- hosts: localhost
  connection: local
  gather_facts: false

  vars_files:
    - ./vars.yml

  tasks:

  - name: Create datacenter
    datacenter:
      name: "{{ datacenter }} - DBaaS Mongo"
      location: de/fra
    register: datacenter_response

  - name: Create LAN
    lan:
      datacenter: "{{ datacenter }} - DBaaS Mongo"
      name: "test_lan"
      public: false
    register: lan_response1

  - name: Create Cluster
    mongo_cluster:
      mongo_db_version: 5.0
      instances: 3
      location: de/fra
      template_id: 6b78ea06-ee0e-4689-998c-fc9c46e781f6
      connections:
        - cidr_list: 
            - 192.168.1.116/24
            - 192.168.1.117/24
            - 192.168.1.118/24
          datacenter: "{{ datacenter }} - DBaaS Mongo"
          lan: "test_lan"
      display_name: "{{ display_name }}"
      wait: true
      wait_timeout: 7200
    register: cluster_response

  - name: Replace Cluster
    mongo_cluster:
      mongo_db_version: 5.0
      instances: 1
      location: de/fra
      template_id: 6b78ea06-ee0e-4689-998c-fc9c46e781f6
      connections:
        - cidr_list: 
            - 192.168.1.126/24
          datacenter: "{{ datacenter }} - DBaaS Mongo"
          lan: "test_lan"
      display_name: "{{ display_name }}"
      wait: true
      wait_timeout: 7200
    register: cluster_response

  - name: Update Cluster
    mongo_cluster:
      mongo_cluster: "{{ display_name }}"
      display_name: "{{ display_name_updated }}"
      state: update
      do_not_replace: true
      wait: true
    register: cluster_response

  - name: Create Cluster User
    mongo_cluster_user:
      mongo_cluster_id: "{{ cluster_response.mongo_cluster.id }}"
      mongo_username: testuser
      mongo_password: "{{ mongo_password }}"
      user_roles:
        - role: read
          database: test
    register: mongo_user_response

  - name: Update User
    mongo_cluster_user:
      mongo_cluster_id: "{{ cluster_response.mongo_cluster.id }}"
      mongo_username: testuser
      mongo_password: "{{ updated_password }}"
      user_roles:
        - role: read
          database: test
        - role: readWrite
          database: test
      state: update
    register: mongo_user_response

  - name: Delete Cluster User
    mongo_cluster_user:
      mongo_cluster_id: "{{ cluster_response.mongo_cluster.id }}"
      mongo_username: testuser
      state: absent
    register: mongo_user_response

  - name: Delete Cluster
    mongo_cluster:
      mongo_cluster: "{{ cluster_response.mongo_cluster.id }}"
      state: absent
      wait: false

  - name: Delete Cluster
    mongo_cluster:
      mongo_cluster: "{{ cluster_response.mongo_cluster.id }}"
      state: absent
      wait: true

  - name: Sleep for 300 seconds and continue with play
    ansible.builtin.wait_for:
      timeout: 300
    delegate_to: localhost

  - name: Remove LAN
    lan:
      datacenter: "{{ datacenter }} - DBaaS Mongo"
      lan: "test_lan"
      state: absent
      wait: true

  - name: Remove datacenter
    datacenter:
      datacenter: "{{ datacenter_response.datacenter.id }}"
      state: absent
      wait: true
