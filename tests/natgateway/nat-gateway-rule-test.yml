
- hosts: localhost
  connection: local
  gather_facts: false

  vars_files:
    - ./vars.yml

  tasks:
    - name: Create datacenter
      ionoscloudsdk.ionoscloud.datacenter:
        name: "{{ datacenter }}"
        description: "{{ description }}"
        location: "{{ location }}"
        wait: true
      register: datacenter_response

    - name: Create ipblock
      ionoscloudsdk.ionoscloud.ipblock:
        name: "{{ name }}"
        location: "{{ location }}"
        size: 2
        state: present
      register: ipblock_response

    - name: Create NAT Gateway
      ionoscloudsdk.ionoscloud.nat_gateway:
        datacenter: "{{ datacenter_response.datacenter.id }}"
        name: "{{ name }}"
        public_ips: "{{ ipblock_response.ipblock.properties.ips }}"
        wait_timeout: 2000
        wait: true
      register: nat_gateway_response

    # - name: Print output to file
    #   ansible.builtin.copy:
    #     content: "{{nat_gateway_response}}"
    #     dest: ../../docs/returned_object_examples/nat_gateway.json

    - name: List NAT Gateways
      ionoscloudsdk.ionoscloud.nat_gateway_info:
        datacenter: "{{ datacenter_response.datacenter.id }}"
      register: nat_gateway_list_response

    # - name: Print output to file
    #   ansible.builtin.copy:
    #     content: "{{nat_gateway_list_response}}"
    #     dest: ../../docs/returned_object_examples/nat_gateway_info.json

    - name: Debug - Show NAT Gateway
      debug:
         msg: "{{ nat_gateway_response }}"

    - name: Create NAT Gateway Rule
      ionoscloudsdk.ionoscloud.nat_gateway_rule:
        datacenter: "{{ datacenter_response.datacenter.id }}"
        nat_gateway: "{{ nat_gateway_response.nat_gateway.id }}"
        name: "{{ name }}"
        type: "SNAT"
        protocol: "TCP"
        source_subnet: "10.0.1.0/24"
        target_subnet: "10.0.1.0"
        target_port_range:
          start: 10000
          end: 20000
        public_ip: "{{ ipblock_response.ipblock.properties.ips[0] }}"
        wait: true
      register: nat_gateway_rule_response

    # - name: Print output to file
    #   ansible.builtin.copy:
    #     content: "{{nat_gateway_rule_response}}"
    #     dest: ../../docs/returned_object_examples/nat_gateway_rule.json

    - name: List NAT Gateway Rules
      ionoscloudsdk.ionoscloud.nat_gateway_rule_info:
        datacenter: "{{ datacenter_response.datacenter.id }}"
        nat_gateway: "{{ nat_gateway_response.nat_gateway.id }}"
      register: nat_gateway_rule_list_response

    # - name: Print output to file
    #   ansible.builtin.copy:
    #     content: "{{nat_gateway_rule_list_response}}"
    #     dest: ../../docs/returned_object_examples/nat_gateway_rule_info.json

    - name: Debug - Show NAT Gateway Rule
      debug:
         msg: "{{ nat_gateway_rule_response }}"

    - name: Update NAT Gateway Rule
      ionoscloudsdk.ionoscloud.nat_gateway_rule:
        datacenter: "{{ datacenter_response.datacenter.id }}"
        nat_gateway: "{{ nat_gateway_response.nat_gateway.id }}"
        nat_gateway_rule: "{{ nat_gateway_rule_response.nat_gateway_rule.id }}"
        public_ip: "{{ ipblock_response.ipblock.properties.ips[1] }}"
        name: "{{ name }} - UPDATED"
        type: "SNAT"
        protocol: "TCP"
        source_subnet: "10.0.1.0/24"
        wait: true
        state: update
      register: nat_gateway_rule_update_response

    - name: Debug - Show Updated NAT Gateway Rule
      debug:
         msg: "{{ nat_gateway_rule_update_response }}"

    - name: Delete NAT Gateway Rule
      ionoscloudsdk.ionoscloud.nat_gateway_rule:
        datacenter: "{{ datacenter_response.datacenter.id }}"
        nat_gateway: "{{ nat_gateway_response.nat_gateway.id }}"
        nat_gateway_rule: "{{ nat_gateway_rule_response.nat_gateway_rule.id }}"
        state: absent

    - name: Delete NAT Gateway Rule
      ionoscloudsdk.ionoscloud.nat_gateway_rule:
        datacenter: "{{ datacenter_response.datacenter.id }}"
        nat_gateway: "{{ nat_gateway_response.nat_gateway.id }}"
        nat_gateway_rule: "invalid-id"
        state: absent

    - name: Remove NAT Gateway
      ionoscloudsdk.ionoscloud.nat_gateway:
       nat_gateway: "{{ nat_gateway_response.nat_gateway.id }}"
       datacenter: "{{ datacenter_response.datacenter.id }}"
       wait: true
       wait_timeout: 2000
       state: absent

    - name: Remove datacenter
      ionoscloudsdk.ionoscloud.datacenter:
        datacenter: "{{ datacenter }}"
        wait: true
        state: absent

    - name: Remove ipblock
      ionoscloudsdk.ionoscloud.ipblock:
        ipblock: "{{ name }}"
        state: absent
