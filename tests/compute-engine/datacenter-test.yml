- hosts: localhost
  connection: local
  gather_facts: false

  vars_files:
    - ./vars.yml

  tasks:
    - name: Create datacenter
      ionoscloudsdk.ionoscloud.datacenter:
        name: "{{ datacenter }}"
        description: "{{ description }}"
        location: "{{ location }}"
        wait: true
      register: datacenter_response

    # - name: Print output to file
    #   ansible.builtin.copy:
    #     content: "{{datacenter_response}}"
    #     dest: ../../docs/returned_object_examples/datacenter.json
  
    - name: Check Create datacenter
      ansible.builtin.assert:
        that:
          - datacenter_response.datacenter.properties.name == datacenter
          - datacenter_response.datacenter.properties.description == description
          - datacenter_response.datacenter.properties.location == location
        success_msg: "Datacenter created successfully"

    - name: List Datacenters
      ionoscloudsdk.ionoscloud.datacenter_info:
      register: datacenter_list_response

    - name: Update datacenter 1
      ionoscloudsdk.ionoscloud.datacenter:
        name: "{{ datacenter }}"
        description: "{{ description }} CHANGED"
        location: "{{ location }}"
        allow_replace: false
      register: datacenter_response2
  
    - name: Check Update datacenter 1
      ansible.builtin.assert:
        that:
          - datacenter_response2.datacenter.id == datacenter_response.datacenter.id
          - datacenter_response2.datacenter.properties.name == datacenter
          - datacenter_response2.datacenter.properties.description == description + ' CHANGED'
          - datacenter_response2.datacenter.properties.location == location
        success_msg: "Datacenter updated successfully"

    - name: Update datacenter no change 1
      ionoscloudsdk.ionoscloud.datacenter:
        name: "{{ datacenter }}"
        description: "{{ description }} CHANGED"
        location: "{{ location }}"
        allow_replace: false
      register: datacenter_response_no_change1
  
    - name: Check Update datacenter no change 1
      ansible.builtin.assert:
        that:
          - datacenter_response_no_change1.datacenter.id == datacenter_response.datacenter.id
          - datacenter_response_no_change1.datacenter.properties.name == datacenter
          - datacenter_response_no_change1.datacenter.properties.description == description + ' CHANGED'
          - datacenter_response_no_change1.datacenter.properties.location == location
          - datacenter_response_no_change1.changed == false

    - name: Update datacenter no change 1
      ionoscloudsdk.ionoscloud.datacenter:
        datacenter: "{{ datacenter }}"
        name: "{{ datacenter }}"
        description: "{{ description }} CHANGED"
        state: update
        allow_replace: false
      register: datacenter_response_no_change2
  
    - name: Check Update datacenter no change 2
      ansible.builtin.assert:
        that:
          - datacenter_response_no_change2.datacenter.id == datacenter_response.datacenter.id
          - datacenter_response_no_change2.datacenter.properties.name == datacenter
          - datacenter_response_no_change2.datacenter.properties.description == description + ' CHANGED'
          - datacenter_response_no_change2.datacenter.properties.location == location
          - datacenter_response_no_change2.changed == false

    - name: Replace datacenter
      ionoscloudsdk.ionoscloud.datacenter:
        name: "{{ datacenter }}"
        location: "{{ new_location }}"
        allow_replace: True
      register: replaced_datacenter1
  
    - name: Check Replace datacenter
      ansible.builtin.assert:
        that:
          - replaced_datacenter1.datacenter.id != datacenter_response2.datacenter.id
          - replaced_datacenter1.datacenter.properties.name == datacenter
          - replaced_datacenter1.datacenter.properties.description == description + ' CHANGED'
          - replaced_datacenter1.datacenter.properties.location == new_location
        success_msg: "Datacenter replaced successfully"

    - name: Update datacenter 2
      ionoscloudsdk.ionoscloud.datacenter:
        datacenter: "{{ replaced_datacenter1.datacenter.properties.name }}"
        name: "{{ datacenter }} RENAMED"
        description: "{{ description }} - RENAMED"
        state: update
      register: updated_datacenter
  
    - name: Check Update datacenter 2
      ansible.builtin.assert:
        that:
          - updated_datacenter.datacenter.id == replaced_datacenter1.datacenter.id
          - updated_datacenter.datacenter.properties.name == datacenter + ' RENAMED'
          - updated_datacenter.datacenter.properties.description == description + ' - RENAMED'
          - updated_datacenter.datacenter.properties.location == new_location
        success_msg: "Datacenter replaced successfully"

    - name: Remove datacenter
      ionoscloudsdk.ionoscloud.datacenter:
        datacenter: "{{ updated_datacenter.datacenter.id }}"
        name: "{{ datacenter }}"
        state: absent
        wait: true
      register: deleted_datacenter

    - name: Remove datacenter
      ionoscloudsdk.ionoscloud.datacenter:
        datacenter: "{{ updated_datacenter.datacenter.id }}"
        name: "{{ datacenter }}"
        state: absent
        wait: true
      register: deleted_datacenter