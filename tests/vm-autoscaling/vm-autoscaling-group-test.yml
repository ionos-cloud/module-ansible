- hosts: localhost
  connection: local
  gather_facts: false

  vars_files:
    - ./vars.yml

  tasks:
    - name: Create datacenter
      ionoscloudsdk.ionoscloud.datacenter:
        name: "{{ datacenter_name }}"
        location: "{{ datacenter_location }}"
        wait: true
      register: datacenter_response

    - name: Create datacenter update
      ionoscloudsdk.ionoscloud.datacenter:
        name: "{{ datacenter_name_update }}"
        location: "{{ datacenter_location_update }}"
        wait: true
      register: datacenter_response_update

    - name: Create VM Autoscaling Group
      ionoscloudsdk.ionoscloud.vm_autoscaling_group:
        datacenter: "{{ datacenter_name }}"
        name: "{{ name }}"
        max_replica_count: "{{ max_replica_count }}"
        min_replica_count: "{{ min_replica_count }}"
        metric: "{{ metric }}"
        range: "{{ range }}"
        unit: "{{ unit }}"
        scale_in_threshold: "{{ scale_in_threshold }}"
        scale_out_threshold: "{{ scale_out_threshold }}"
        scale_in_action: "{{ scale_in_action }}"
        scale_out_action: "{{ scale_out_action }}"
        availability_zone: "{{ availability_zone }}"
        cores: "{{ cores }}"
        cpu_family: "{{ cpu_family }}"
        ram: "{{ ram }}"
        nics: "{{ nics }}"
        volumes: "{{ volumes }}"
      register: vm_autoscaling_group_response

    # - name: Sleep for 300 seconds and continue with play
    #   ansible.builtin.wait_for:
    #     timeout: 300
    #   delegate_to: localhost

    # - name: Print output to file
    #   ansible.builtin.copy:
    #     content: "{{vm_autoscaling_group_response}}"
    #     dest: ../../docs/returned_object_examples/vm_autoscaling_group.json

    - name: List VM Autoscaling Group Actions
      ionoscloudsdk.ionoscloud.vm_autoscaling_action_info:
        vm_autoscaling_group: "{{ vm_autoscaling_group_response.vm_autoscaling_group.id }}"
      register: vm_autoscaling_actions_response

    - name: Show VM Autoscaling Group Actions
      debug:
        var: vm_autoscaling_actions_response.result

    # - name: Print output to file
    #   ansible.builtin.copy:
    #     content: "{{vm_autoscaling_actions_response}}"
    #     dest: ../../docs/returned_object_examples/vm_autoscaling_action_info.json

    - name: List VM Autoscaling Group Servers
      ionoscloudsdk.ionoscloud.vm_autoscaling_server_info:
        vm_autoscaling_group: "{{ vm_autoscaling_group_response.vm_autoscaling_group.id }}"
      register: vm_autoscaling_servers_response

    # - name: Print output to file
    #   ansible.builtin.copy:
    #     content: "{{vm_autoscaling_servers_response}}"
    #     dest: ../../docs/returned_object_examples/vm_autoscaling_server_info.json

    - name: Show VM Autoscaling Group Servers
      debug:
        var: vm_autoscaling_servers_response.result

    - name: List VM Autoscaling Groups
      ionoscloudsdk.ionoscloud.vm_autoscaling_group_info:
      register: vm_autoscaling_groups_response

    # - name: Print output to file
    #   ansible.builtin.copy:
    #     content: "{{vm_autoscaling_groups_response}}"
    #     dest: ../../docs/returned_object_examples/vm_autoscaling_group_info.json

    - name: Show VM Autoscaling Groups
      debug:
        var: vm_autoscaling_groups_response.result

    - name: Show VM Ausocaling Group
      debug:
        var: vm_autoscaling_group_response.vm_autoscaling_group

    - name: Update VM Ausocaling Group
      ionoscloudsdk.ionoscloud.vm_autoscaling_group:
        vm_autoscaling_group: "{{ vm_autoscaling_group_response.vm_autoscaling_group.id }}"
        datacenter: "{{ datacenter_name_update }}"
        name: "{{ name_update }}"
        max_replica_count: "{{ max_replica_count_update }}"
        min_replica_count: "{{ min_replica_count_update }}"
        metric: "{{ metric_update }}"
        range: "{{ range_update }}"
        unit: "{{ unit_update }}"
        scale_in_threshold: "{{ scale_in_threshold_update }}"
        scale_out_threshold: "{{ scale_out_threshold_update }}"
        scale_in_action: "{{ scale_in_action_update }}"
        scale_out_action: "{{ scale_out_action_update }}"
        availability_zone: "{{ availability_zone_update }}"
        cores: "{{ cores_update }}"
        cpu_family: "{{ cpu_family_update }}"
        ram: "{{ ram_update }}"
        nics: "{{ nics_update }}"
        volumes: "{{ volumes_update }}"
        do_not_replace: false
        state: update
      register: vm_autoscaling_group_response

    - name: Remove VM Ausocaling Group
      ionoscloudsdk.ionoscloud.vm_autoscaling_group:
        vm_autoscaling_group: "{{ name }}"
        state: absent
      register: vm_autoscaling_group_response

    - name: Remove datacenter
      ionoscloudsdk.ionoscloud.datacenter:
        datacenter: "{{ datacenter_name }}"
        state: absent
        wait: true
      register: deleted_datacenter

    - name: Remove datacenter update
      ionoscloudsdk.ionoscloud.datacenter:
        datacenter: "{{ datacenter_name_update }}"
        state: absent
        wait: true
      register: deleted_datacenter
