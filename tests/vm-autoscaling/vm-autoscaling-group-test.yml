- hosts: localhost
  connection: local
  gather_facts: false

  vars_files:
    - ../vars.yml

  tasks:

  - name: Create datacenter
    datacenter:
      name: "{{ datacenter }} - VM Autoscaling"
      location: us/las
    register: datacenter_response

  - name: Create VM Autoscaling Group
    vm_autoscaling_group:
      state: present
      max_replica_count: 3
      min_replica_count: 1
      target_replica_count: 2
      datacenter: "{{ datacenter_response.datacenter.id }}"
      name: "test_vm_autoscaling_group"
      location: us/las
      policy:
        metric: INSTANCE_CPU_UTILIZATION_AVERAGE
        range: PT24H
        scale_in_action:
          amount: 1
          amount_type: ABSOLUTE
          cooldown_period: PT5M
          termination_policy: RANDOM
        scale_in_threshold: 33
        scale_out_action:
          amount: 2
          amount_type: ABSOLUTE
          cooldown_period: PT5M
        scale_out_threshold: 77
        unit: PER_HOUR
      replica_configuration:
        availability_zone: AUTO
        cores: 2
        cpu_family: INTEL_XEON
        ram: 1024
        nics:
          - lan: 1
            name: TEST_NIC1
            dhcp: true
          - lan: 1
            name: TEST_NIC22
            dhcp: false
        volumes:
          - image_alias: ubuntu:latest
            image_password: test12345
            name: SDK_TEST_VOLUME
            size: 50
            type: HDD
            bus: IDE
      wait: true
    register: vm_autoscaling_group_response

  - name: Update VM Autoscaling Group
    vm_autoscaling_group:
      state: update
      vm_autoscaling_group: "{{ vm_autoscaling_group_response.vm_autoscaling_group.properties.name }}"
      max_replica_count: 4
      policy:
        scale_in_action:
          amount: 2
      wait: true

  - name: Delete VM Autoscaling Group
    vm_autoscaling_group:
      state: absent
      vm_autoscaling_group: "{{ vm_autoscaling_group_response.vm_autoscaling_group.id }}"
      wait: true

  - name: Remove datacenter
    datacenter:
      id: "{{ datacenter_response.datacenter.id }}"
      name: "{{ datacenter }} - DBaaS"
      state: absent
      wait: true
