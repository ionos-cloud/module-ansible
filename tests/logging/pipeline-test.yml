- hosts: localhost
  connection: local
  gather_facts: false

  vars_files:
    - ./vars.yml

  tasks:

  - name: Create Pipeline
    ionoscloudsdk.ionoscloud.pipeline:
      name: "{{pipeline_name}}"
      logs: "{{pipeline_logs}}"
      wait: true
    register: pipeline_response

  - name: List Pipelines
    ionoscloudsdk.ionoscloud.pipeline_info:
    register: pipelines_response

  - name: Show Pipelines
    debug:
      var: pipelines_response.pipelines

  # - name: Print output to file
  #   ansible.builtin.copy:
  #     content: "{{pipelines_response}}"
  #     dest: ../../docs/returned_object_examples/pipeline_info.json

  - name: Update pipeline
    ionoscloudsdk.ionoscloud.pipeline:
      pipeline: "{{ pipeline_response.pipeline.properties.name }}"
      name: "{{pipeline_name_updated}}"
      logs: "{{pipeline_logs_updated}}"
      state: update
    register: updated_pipeline_response

  # - name: Print output to file
  #   ansible.builtin.copy:
  #     content: "{{updated_pipeline_response}}"
  #     dest: ../../docs/returned_object_examples/pipeline.json

  - name: Update pipeline no change
    ionoscloudsdk.ionoscloud.pipeline:
      pipeline: "{{ updated_pipeline_response.pipeline.properties.name }}"
      name: "{{pipeline_name_updated}}"
      allow_replace: False
      state: update
    register: updated_pipeline_response

  - name: Asserting that changed == false when no update is made
    assert:
      that:
        - updated_pipeline_response.changed == false
      msg: "Changed should be false"

  - name: Renew Pipeline key
    ionoscloudsdk.ionoscloud.pipeline:
      pipeline: "{{ updated_pipeline_response.pipeline.properties.name }}"
      state: renew

  - name: Delete pipeline
    ionoscloudsdk.ionoscloud.pipeline:
      pipeline: "{{ updated_pipeline_response.pipeline.properties.name }}"
      wait: true
      state: absent
