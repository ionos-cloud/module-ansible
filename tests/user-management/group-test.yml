- hosts: localhost
  connection: local
  gather_facts: false

  vars_files:
    - ./vars.yml

  tasks:
    - set_fact:
        random_user1: "no-reply1{{100000000 |random}}@example.com"
        random_user2: "no-reply2{{100000000 |random}}@example.com"
      run_once: yes

    - name: Create user1
      user:
        firstname: John1
        lastname: Doe
        user_password: "{{ password }}"
        email: "{{ random_user1 }}"
        administrator: false

    - name: Create user2
      user:
        firstname: John2
        lastname: Doe
        user_password: "{{ password }}"
        email: "{{ random_user2 }}"
        administrator: false

    - name: Create group
      group:
        name: "{{ name }}"
        create_datacenter: True
        create_snapshot: True
        reserve_ip: True
        access_activity_log: True
        create_pcc: True
        s3_privilege: True
        create_backup_unit: True
        create_internet_access: True
        create_k8s_cluster: True
        create_flow_log: True
        access_and_manage_monitoring: True
        access_and_manage_certificates: True
        manage_dbaas: True
      register: group_response

    - name: Add user1 to group
      group:
        name: "{{ name }}"
        users:
          - "{{ random_user1 }}"
        state: update

    - name: Debug - show response
      debug:
        msg: "{{ group_response }}"

    - name: Update group
      group:
        name: "{{ name }}"
        users:
          - "{{ random_user1 }}"
          - "{{ random_user2 }}"
        create_datacenter: False
        create_snapshot: False
        reserve_ip: False
        access_activity_log: False
        create_pcc: False
        s3_privilege: False
        create_backup_unit: False
        create_internet_access: False
        create_k8s_cluster: False
        create_flow_log: True
        access_and_manage_monitoring: True
        access_and_manage_certificates: True
        manage_dbaas: False
        wait: False
        state: update
      register: group_response

    - name: Debug - show response
      debug:
        msg: "{{ group_response }}"

    - name: Asserting that updating a group handles users correctly
      assert:
        that:
          - group_response.group['entities']['users']['items'] | length == 2
        msg: "Group-test: updating a group must keep its users"

    - name: Remove user from group
      group:
        name: "{{ name }}"
        users: []
        state: update

    - name: Delete user1
      user:
        email: "{{ random_user1 }}"
        state: absent

    - name: Delete user2
      user:
        email: "{{ random_user2 }}"
        state: absent

    - name: Delete group
      group:
        name: "{{ name }}"
        state: absent

    - name: Delete group
      group:
        name: "{{ name }}"
        state: absent
