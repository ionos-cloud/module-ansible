
- hosts: localhost
  connection: local
  gather_facts: false

  vars_files:
    - ./vars.yml

  tasks:
  - name: Create datacenter
    ionoscloudsdk.ionoscloud.datacenter:
      name: "{{ datacenter }} - {{ 100 | random}}"
      description: "{{ description }}"
      location: us/las
      wait: True
    register: datacenter1

  - name: Create datacenter
    ionoscloudsdk.ionoscloud.datacenter:
      name: "{{ datacenter }} - {{ 100 | random}}"
      description: "{{ description }}"
      location: us/las
      wait: True
    register: datacenter2

  - name: Create group
    ionoscloudsdk.ionoscloud.group:
      name: "Demo"
      create_datacenter: true
      create_snapshot: true
      reserve_ip: true
      access_activity_log: true

  - name: Create share
    ionoscloudsdk.ionoscloud.share:
      group: Demo
      edit_privilege: True
      share_privilege: True
      resource_ids:
        - "{{ datacenter1.datacenter.id }}"
        - "{{ datacenter2.datacenter.id }}"
      state: present
    register: share

  # - name: Print output to file
  #   ansible.builtin.copy:
  #     content: "{{share}}"
  #     dest: ../../docs/returned_object_examples/share.json

  - name: Debug - Show Share
    debug:
      msg: "{{ share }}"

  - name: List Shares
    ionoscloudsdk.ionoscloud.share_info:
      group: Demo
    register: share_list_response

  # - name: Print output to file
  #   ansible.builtin.copy:
  #     content: "{{share_list_response}}"
  #     dest: ../../docs/returned_object_examples/share_info.json

  # Update shares
  - name: Update shares
    ionoscloudsdk.ionoscloud.share:
      group: Demo
      edit_privilege: False
      share_privilege: True
      resource_ids:
        - "{{ datacenter1.datacenter.id }}"
        - "{{ datacenter2.datacenter.id }}"
      state: update

#   Remove shares
  - name: Remove shares
    ionoscloudsdk.ionoscloud.share:
      group: Demo
      resource_ids:
        - "{{ datacenter1.datacenter.id }}"
        - "{{ datacenter2.datacenter.id }}"
      state: absent

  - name: Delete group
    ionoscloudsdk.ionoscloud.group:
      group: "Demo"
      state: absent

  - name: Remove datacenter
    ionoscloudsdk.ionoscloud.datacenter:
      datacenter: "{{ datacenter1.datacenter.id }}"
      state: absent
      wait: true

  - name: Remove datacenter
    ionoscloudsdk.ionoscloud.datacenter:
      datacenter: "{{ datacenter2.datacenter.id }}"
      state: absent
      wait: true

