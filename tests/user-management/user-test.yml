- hosts: localhost
  connection: local
  gather_facts: false

  vars_files:
    - ./vars.yml

  tasks:
    - set_fact:
        random_user: "no-reply{{100000000 |random}}@example.com"
      run_once: yes

    - name: Create user
      ionoscloudsdk.ionoscloud.user:
        firstname: John
        lastname: Doe
        email: "{{ random_user }}"
        administrator: false
        user_password: "{{ password }}"
        force_sec_auth: false
        state: present

    - name: Create first group
      ionoscloudsdk.ionoscloud.group:
        name: "{{ name }} 1"

    - name: Add user to first group
      ionoscloudsdk.ionoscloud.user:
        user: "{{ random_user }}"
        groups:
          - "{{ name }} 1"
        state: update

    - name: Create second group
      ionoscloudsdk.ionoscloud.group:
        name: "{{ name }} 2"

    - name: Update user
      ionoscloudsdk.ionoscloud.user:
        firstname: John
        lastname: Doe
        user: "{{ random_user }}"
        administrator: false
        force_sec_auth: false
        groups:
          - "{{ name }} 1"
          - "{{ name }} 2"
        state: update
      register: user_response

    - name: Debug - show response
      debug:
        msg: "{{ user_response }}"

    - name: Asserting that updating a user handles its groups correctly
      assert:
        that:
          - user_response.user['entities']['groups']['items'] | length == 2
        msg: "user-test: updating a user must keep its groups"

    - name: Remove user from groups
      ionoscloudsdk.ionoscloud.user:
        user: "{{ random_user }}"
        groups: []
        state: update

    - name: Delete user
      ionoscloudsdk.ionoscloud.user:
        user: "{{ random_user }}"
        state: absent

    - name: Delete user
      ionoscloudsdk.ionoscloud.user:
        user: "non-existent-user"
        state: absent

    - name: Delete group
      ionoscloudsdk.ionoscloud.group:
        group: "{{ name }}"
        state: absent
