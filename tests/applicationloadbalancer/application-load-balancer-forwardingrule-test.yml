
- hosts: localhost
  connection: local
  gather_facts: false

  vars_files:
    - ./vars.yml

  tasks:
    - name: Create datacenter
      ionoscloudsdk.ionoscloud.datacenter:
        name: "{{ datacenter }}"
        description: "{{ description }}"
        location: "{{ location }}"
        wait: true
      register: datacenter_response

    - name: Create Listener LAN
      ionoscloudsdk.ionoscloud.lan:
        datacenter: "{{ datacenter }}"
        name: "listener_lan"
        public: false
      register: listener_lan

    - name: Create Target LAN
      ionoscloudsdk.ionoscloud.lan:
        datacenter: "{{ datacenter }}"
        name: "target_lan"
        public: false
      register: target_lan

    - name: Create Application Load Balancer
      ionoscloudsdk.ionoscloud.application_load_balancer:
        datacenter: "{{ datacenter_response.datacenter.id }}"
        name: "{{ name }}"
        ips:
          - "10.12.118.224"
        listener_lan: "{{ listener_lan.lan.id }}"
        target_lan: "{{ target_lan.lan.id }}"
        wait: true
        wait_timeout: 2000
      register: alb_response

    # - name: Print output to file
    #   ansible.builtin.copy:
    #     content: "{{alb_response}}"
    #     dest: ../../docs/returned_object_examples/application_load_balancer.json

    - name: List Application Load Balancers
      ionoscloudsdk.ionoscloud.application_load_balancer_info:
        datacenter: "{{ datacenter_response.datacenter.id }}"
      register: alb_list_response

    # - name: Print output to file
    #   ansible.builtin.copy:
    #     content: "{{alb_list_response}}"
    #     dest: ../../docs/returned_object_examples/application_load_balancer_info.json

    - name: Debug - Show Application Load Balancer
      debug:
         msg: "{{ alb_response }}"

    - name: Create Application Load Balancer Forwarding Rule
      ionoscloudsdk.ionoscloud.application_load_balancer_forwardingrule:
        datacenter: "{{ datacenter_response.datacenter.id }}"
        application_load_balancer: "{{ alb_response.application_load_balancer.id }}"
        name: "{{ name }}"
        protocol: "HTTP"
        listener_ip: "10.12.118.224"
        listener_port: "8081"
        http_rules:
          - name: "Ansible HTTP Rule"
            type : static
            response_message: "<>"
            content_type: "application/json"
            conditions:
              - type: "HEADER"
                condition: "STARTS_WITH"
                value: "Friday"

        wait: true
      register: alb_forwarding_rule_response

    # - name: Print output to file
    #   ansible.builtin.copy:
    #     content: "{{alb_forwarding_rule_response}}"
    #     dest: ../../docs/returned_object_examples/application_load_balancer_forwardingrule.json

    - name: List Application Load Balancer Forwarding rules
      ionoscloudsdk.ionoscloud.application_load_balancer_forwardingrule_info:
        datacenter: "{{ datacenter_response.datacenter.id }}"
        application_load_balancer: "{{ alb_response.application_load_balancer.id }}"
      register: alb_forwardingrule_list_response

    # - name: Print output to file
    #   ansible.builtin.copy:
    #     content: "{{alb_forwardingrule_list_response}}"
    #     dest: ../../docs/returned_object_examples/application_load_balancer_forwardingrule_info.json

    - name: Debug - Show Application Load Balancer Forwarding Rule
      debug:
         msg: "{{ alb_forwarding_rule_response }}"

    - name: Update Application Load Balancer Forwarding Rule
      ionoscloudsdk.ionoscloud.application_load_balancer_forwardingrule:
        datacenter: "{{ datacenter_response.datacenter.id }}"
        application_load_balancer: "{{ alb_response.application_load_balancer.id }}"
        forwarding_rule: "{{ alb_forwarding_rule_response.forwarding_rule.id }}"
        name: "{{ name }} - UPDATED"
        protocol: "HTTP"
        wait: true
        state: update
      register: alb_forwarding_rule_update_response

    - name: Debug - Show Updated Application Load Balancer Forwarding Rule
      debug:
         msg: "{{ alb_forwarding_rule_update_response }}"

    - name: Delete Application Load Balancer Forwarding Rule
      ionoscloudsdk.ionoscloud.application_load_balancer_forwardingrule:
        datacenter: "{{ datacenter_response.datacenter.id }}"
        application_load_balancer: "{{ alb_response.application_load_balancer.id }}"
        forwarding_rule: "{{ alb_forwarding_rule_response.forwarding_rule.id }}"
        state: absent

    - name: Remove Application Load Balancer
      ionoscloudsdk.ionoscloud.application_load_balancer:
       application_load_balancer: "{{ alb_response.application_load_balancer.id }}"
       datacenter: "{{ datacenter_response.datacenter.id }}"
       wait: true
       wait_timeout: 2000
       state: absent

    - name: Remove Listener LAN
      ionoscloudsdk.ionoscloud.lan:
        datacenter: "{{ datacenter }}"
        lan: "listener_lan"
        state: absent

    - name: Remove Target LAN
      ionoscloudsdk.ionoscloud.lan:
        datacenter: "{{ datacenter }}"
        lan: "target_lan"
        state: absent

    - name: Remove datacenter
      ionoscloudsdk.ionoscloud.datacenter:
        datacenter: "{{ datacenter }}"
        wait: true
        state: absent
