# Ansible Ionos Cloud external inventory script settings
#

[ionos]

# Ionos Cloud credentials.
# They may also be specified via the environment variables
# IONOS_USERNAME and IONOS_PASSWORD.
# The credentials found in the environment variables have
# higher precedence.
# Alternatively, passwords can be specified with a file or a script, similarly
# to Ansible's vault_password_file. The environment variable
# IONOS_PASSWORD_FILE can also be used to specify that file.
#
token =
username =
password =
password_file =

# deprecated parameters
# subscription_user =
# subscription_password =
# subscription_password_file =


# Ionos Cloud API URL.
# It may be overriden via IONOS_CLOUD_API_URL environment variable.
#
# api_url = https://api.ionos.com/cloudapi/v6


# API calls to Ionos Cloud may be slow. For this reason, we cache the results
# of an API call. Set this to the path you want cache files to be written to.
# One file will be written to this file:
#   - ansible-ionos.pkl
#
cache_path = /tmp


# The number of seconds a cache file is considered valid. After this many
# seconds, a new API call will be made, and the cache file will be updated.
# To disable the cache, set this value to 0
cache_max_age = 0

# Variables passed to every group, e.g.:
#
#   vars = {'ansible_user': 'root','ansible_ssh_private_key_file': '~/.ssh/id_rsa'}
#
vars = {}


# Control grouping with the following boolean flags.
group_by_datacenter_id = False
group_by_location = False
group_by_availability_zone = False

# Use the server name instead of the IP as inventory hostname. The IP is still
# set as ansible_host to connect to the server.
server_name_as_inventory_hostname = False

[regexgroups]
# keys: group, value: regex
# When a regex matches a servername (server.properties.name), then it will be added
# to the group. 
# Uses python regex, for example to ignorecase use "(?i)somestring". Reads as
# RAW string so don't use quotes around string! 

# Example: 
# given a serverlist: master0, master1, master2, worker, bootstrap, etc.
# The following config:

# master = ^master
# worker = ^worker
# bootstrap = bootstrap

# Will create the following inventory graph:
# @all:
#   |--@ungrouped:
#   |  |--10.x.y.1
#   |  |--10.x.y.2
#   |--@worker:
#   |  |--10.x.y.3
#   |--@master:
#   |  |--10.x.y.4    # <- this is master0
#   |  |--10.x.y.5    # <- this is master1 etc.
#   |  |--10.x.y.6
#   |--@bootstrap:
#   |  |--10.x.y.7
